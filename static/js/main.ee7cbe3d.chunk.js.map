{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setwaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","amount","category","difficulty","quiz","setQuiz","fetchQuestions","url","a","axios","get","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","onSubmit","htmlFor","type","id","onChange","min","max","Loading","Modal","toFixed","onClick","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wRAGMA,EAAQ,CACZC,OAAQ,GACRC,QAAS,GACTC,SAAU,IAQNC,EAAaC,IAAMC,gBAEZC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACbC,oBAAS,GADI,mBACpCC,EADoC,KAC3BC,EAD2B,OAEbF,oBAAS,GAFI,mBAEpCG,EAFoC,KAE3BC,EAF2B,OAGTJ,mBAAS,IAHA,mBAGpCK,EAHoC,KAGzBC,EAHyB,OAIjBN,mBAAS,GAJQ,mBAIpCO,EAJoC,KAI7BC,EAJ6B,OAKbR,mBAAS,GALI,mBAKpCS,EALoC,KAK3BC,EAL2B,OAMjBV,oBAAS,GANQ,mBAMpCW,EANoC,KAM7BC,EAN6B,OAOLZ,oBAAS,GAPJ,mBAOpCa,EAPoC,KAOvBC,EAPuB,OAQnBd,mBAAS,CAC/Be,OAAQ,GACRC,SAAU,SACVC,WAAY,SAX6B,mBAQpCC,EARoC,KAQ9BC,EAR8B,KAcrCC,EAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACrBlB,GAAW,GACXF,GAAW,GAFU,SAGEqB,IAAMC,IAAIH,GAAKI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAH5C,QAGfG,EAHe,SAKbC,EAAOD,EAASC,KAAKC,SAClBC,OAAS,GAChB1B,EAAawB,GACb1B,GAAW,GACXF,GAAW,GACXU,GAAS,KAETV,GAAW,GACXU,GAAS,IAGXX,GAAQ,GAhBW,2CAAH,sDAmBdgC,EAAe,WACnBzB,GAAS,SAAC0B,GACR,IAAM3B,EAAQ2B,EAAW,EACzB,OAAI3B,EAAQF,EAAU2B,OAAS,GAC7BG,IACO,GAEA5B,MAYP4B,EAAY,WAChBrB,GAAe,IAmBjB,OACE,kBAACnB,EAAWyC,SAAZ,CACEC,MAAO,CACLpC,UACAE,UACAE,YACAE,QACAE,UACAE,QACAE,cACAoB,eACAK,YAvCc,SAACD,GACfA,GACF3B,GAAW,SAAC6B,GACV,OAAOA,EAAW,KAGtBN,KAkCIO,WA7Ba,WACjBtC,GAAW,GACXQ,EAAW,GACXI,GAAe,IA2BXI,OACAuB,aA1Be,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBN,EAAQK,EAAEE,OAAOP,MACvBlB,EAAQ,2BAAKD,GAAN,kBAAayB,EAAON,MAwBvBQ,aAtBe,SAACH,GACpBA,EAAEI,iBADwB,IAElB/B,EAAiCG,EAAjCH,OAAQC,EAAyBE,EAAzBF,SAAUC,EAAeC,EAAfD,WACpBI,EAAG,UA3EQ,+BA2ER,kBAA4BN,EAA5B,qBAA+CxB,EAAMyB,GAArD,uBAA6EC,EAA7E,kBACTG,EAAeC,MAqBZtB,IAKMgD,EAAmB,WAC9B,OAAOC,qBAAWrD,IC/CLsD,EA9DG,WAAO,IAAD,EAC8BF,IAA5C7B,EADc,EACdA,KAAMuB,EADQ,EACRA,aAAcI,EADN,EACMA,aAAclC,EADpB,EACoBA,MAC1C,OACE,8BACE,6BAASuC,UAAU,mBACjB,0BAAMA,UAAU,aAAaC,SAAUN,GACrC,0CACA,yBAAKK,UAAU,gBACb,2BAAOE,QAAQ,UAAf,wBACA,2BACEC,KAAK,SACLC,GAAG,SACHX,KAAK,SACLY,SAAUd,EACVJ,MAAOnB,EAAKH,OACZmC,UAAU,aACVM,IAAK,EACLC,IAAK,MAGT,yBAAKP,UAAU,gBACb,2BAAOE,QAAQ,YAAf,aACA,4BACEE,GAAG,WACHX,KAAK,WACLO,UAAU,aACVb,MAAOnB,EAAKF,SACZuC,SAAUd,GAEV,4BAAQJ,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,cAGJ,yBAAKa,UAAU,gBACb,2BAAOE,QAAQ,cAAf,eACA,4BACEE,GAAG,aACHX,KAAK,aACLO,UAAU,aACVb,MAAOnB,EAAKD,WACZsC,SAAUd,GAEV,4BAAQJ,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,UAGH1B,GACC,uBAAGuC,UAAU,SAAb,0DAIF,4BAAQG,KAAK,SAASH,UAAU,cAAhC,aC9CKQ,EARC,WACd,OACE,8BACE,yBAAKR,UAAU,cCoBNS,EAtBD,WAAO,IAAD,EACsCZ,IAAhDlC,EADU,EACVA,YAAa2B,EADH,EACGA,WAAY/B,EADf,EACeA,QAASJ,EADxB,EACwBA,UAC1C,OACE,yBACE6C,UAAS,UACPrC,EAAc,yBAA2B,oBAG3C,yBAAKqC,UAAU,iBACb,yCACA,uBAAGA,UAAU,IAAb,iBACkBzC,EAAUJ,EAAU2B,OAAU,KAAK4B,QAAQ,GAD7D,4BAIA,4BAAQV,UAAU,YAAYW,QAAS,kBAAMrB,MAA7C,iBCiDOsB,MA5Df,WAAgB,IAAD,EAUTf,IARF9C,EAFW,EAEXA,QACAE,EAHW,EAGXA,QACAE,EAJW,EAIXA,UACAE,EALW,EAKXA,MACAE,EANW,EAMXA,QACAwB,EAPW,EAOXA,aACAK,EARW,EAQXA,YAGF,GAXa,EASXE,WAEEvC,EACF,OAAO,kBAAC,EAAD,MAET,GAAIE,EACF,OAAO,kBAAC,EAAD,MAfI,MAiB2CE,EAAUE,GAA1DwD,EAjBK,EAiBLA,SAAUC,EAjBL,EAiBKA,kBAAmBC,EAjBxB,EAiBwBA,eAGjCC,EAAO,YAAOF,GACZG,EAAYC,KAAKC,MAAsB,EAAhBD,KAAKE,UASlC,OARkB,IAAdH,EAEFD,EAAQK,KAAKN,IAGbC,EAAQK,KAAKL,EAAQC,IACrBD,EAAQC,GAAaF,GAGrB,8BACE,kBAAC,EAAD,MACA,6BAASf,UAAU,QACjB,uBAAGA,UAAU,mBAAb,oBACoBzC,EADpB,IAC8BF,GAE9B,6BAAS2C,UAAU,aACjB,wBAAIsB,wBAAyB,CAAEC,OAAQV,KACvC,6BACGG,EAAQQ,KAAI,SAACC,EAAQpE,GACpB,OACE,4BACEqE,IAAKrE,EACLsD,QAAS,kBAAMvB,EAAY2B,IAAmBU,IAC9CH,wBAAyB,CAAEC,OAAQE,GACnCzB,UAAU,oBAMpB,4BAAQW,QAAS,kBAAM5B,KAAgBiB,UAAU,iBAAjD,oBCpDK2B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,W","file":"static/js/main.ee7cbe3d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useContext, useEffect } from \"react\";\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n};\n\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst url =\n  \"https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple\";\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [waiting, setwaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"sports\",\n    difficulty: \"easy\",\n  });\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setwaiting(false);\n    const response = await axios.get(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setwaiting(false);\n        setError(false);\n      } else {\n        setwaiting(true);\n        setError(true);\n      }\n    } else {\n      waiting(true);\n    }\n  };\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => {\n        return oldState + 1;\n      });\n    }\n    nextQuestion();\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setwaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n    const url = `${API_ENDPOINT}amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\n  return (\n    <main>\n      <section className=\"quiz quiz-small\">\n        <form className=\"setup-form\" onSubmit={handleSubmit}>\n          <h2>Setup Quiz</h2>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Number of Questions:</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              name=\"amount\"\n              onChange={handleChange}\n              value={quiz.amount}\n              className=\"form-input\"\n              min={0}\n              max={50}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"category\">Category:</label>\n            <select\n              id=\"category\"\n              name=\"category\"\n              className=\"form-input\"\n              value={quiz.category}\n              onChange={handleChange}\n            >\n              <option value=\"sports\">sports</option>\n              <option value=\"history\">history</option>\n              <option value=\"politics\">politics</option>\n            </select>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"difficulty\">Difficulty:</label>\n            <select\n              id=\"difficulty\"\n              name=\"difficulty\"\n              className=\"form-input\"\n              value={quiz.difficulty}\n              onChange={handleChange}\n            >\n              <option value=\"easy\">easy</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"hard\">hard</option>\n            </select>\n          </div>\n          {error && (\n            <p className=\"error\">\n              can't generate questions, please try different options\n            </p>\n          )}\n          <button type=\"submit\" className=\"submit-btn\">\n            Start\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\n  return (\n    <div\n      className={`${\n        isModalOpen ? \"modal-container isOpen\" : \"modal-container\"\n      }`}\n    >\n      <div className=\"modal-content\">\n        <h2>Congrats!</h2>\n        <p className=\"\">\n          You answered {((correct / questions.length) * 100).toFixed(0)}% of\n          questions correctly\n        </p>\n        <button className=\"close-btn\" onClick={() => closeModal()}>\n          Play Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nimport SetupForm from \"./SetupForm\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n    closeModal,\n  } = useGlobalContext();\n  if (waiting) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n  const { question, incorrect_answers, correct_answer } = questions[index];\n  // const answers = [...incorrect_answers, correct_answer];\n\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    //if it is 3, add at the end of the answers array\n    answers.push(correct_answer);\n  } else {\n    //otherwise push element in answers[tempIndex] and then replace it with correct answer\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers: {correct}/{index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div>\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  onClick={() => checkAnswer(correct_answer === answer)}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                  className=\"answer-btn\"\n                />\n              );\n            })}\n          </div>\n        </article>\n        <button onClick={() => nextQuestion()} className=\"next-question\">\n          next question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}